//return 이용
package com.example.a240510

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.gestures.scrollable
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.size
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.Button
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp

class StateActivity: ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            Column(
                modifier = Modifier
                    .fillMaxSize()
                    .verticalScroll(rememberScrollState()),
                horizontalAlignment = Alignment.CenterHorizontally
            ) {
                Spacer(modifier = Modifier.size(20.dp))
                val clickCount = SubButton1("저장",24)
                Spacer(modifier = Modifier.size(20.dp))
                val tvVisible = SubButton2(name = "기록숨기기", size = 24)
                Spacer(modifier = Modifier.size(20.dp))
                MakeTv(num = clickCount, tvVisible)
            }
        }
    }

    @Composable
    fun SubButton1(name: String, size: Int): Int {
        var count by remember {
            mutableStateOf(0)
        }
        Button(onClick = {
            ++count
        }) {
            Text(text = name, fontSize = size.sp)
        }
        return count
    }

    @Composable
    fun SubButton2(name: String, size: Int):Boolean {
        var tvVisible by remember {
            mutableStateOf(true)
        }
        Button(onClick = {
            tvVisible = if (tvVisible) false else true
        }) {
            Text(text = name, fontSize = size.sp)
        }
        return tvVisible
    }

    @Composable
    fun MakeTv(num: Int, tvVisible: Boolean) {
        for (i in 0..num) {
            if (i==0) {
                continue
            } else if (tvVisible) {
                Text(text = "$i:저장했어요")
            }
        }
    }
}

